float rng(vec2 seed){return fract(sin(dot(seed*.1684,vec2(54.649,321.547)))*450315.);}mat2 rot(float a){float c=cos(a),s=sin(a);return mat2(c,-s,s,c);}float sdCylinder(vec2 p,float r){return length(p)-r;}float sdBox(vec3 p,vec3 b){vec3 d=abs(p)-b;return min(max(d.x,max(d.y,d.z)),0.)+length(max(d,0.));}float amod(inout vec2 p,float count){float an=6.28318/count,a=atan(p.y,p.x)+an/2.,c=floor(a/an);c=mix(c,abs(c),step(count*.5,abs(c)));a=mod(a,an)-an/2.;p.xy=vec2(cos(a),sin(a))*length(p);return c;}float amodIndex(vec2 p,float count){float an=6.28318/count,a=atan(p.y,p.x)+an/2.,c=floor(a/an);c=mix(c,abs(c),step(count*.5,abs(c)));return c;}float repeat(float v,float c){return mod(v,c)-c/2.;}vec2 repeat(vec2 v,vec2 c){return mod(v,c)-c/2.;}vec3 repeat(vec3 v,float c){return mod(v,c)-c/2.;}vec2 displaceLoop(vec2 p,float r){return vec2(length(p.xy)-r,atan(p.y,p.x));}void camera(inout vec3 p){p.xz*=rot(.392699),p.yz*=rot(.523598);}float windowCross(vec3 pos,vec4 size,float salt){vec3 p=pos;float sx=size.x*(.6+salt*.4),sy=size.y*(.3+salt*.7);vec2 sxy=vec2(sx,sy);p.xy=repeat(p.xy+sxy/2.,sxy);float scene=sdBox(p,size.zyw*2.);scene=min(scene,sdBox(p,size.xzw*2.));scene=max(scene,sdBox(pos,size.xyw));return scene;}float window(vec3 pos,vec2 dimension,float salt){float thin=.008,depth=.04,depthCadre=.06,padding=.08,scene=windowCross(pos,vec4(dimension,thin,depth),salt),cadre=sdBox(pos,vec3(dimension,depthCadre));cadre=max(cadre,-sdBox(pos,vec3(dimension.x-padding,dimension.y-padding,depthCadre*2.)));scene=min(scene,cadre);return scene;}float box(vec3 pos,float salt){vec3 p=pos;float ry=1.72*(.3+salt),rz=.8*(.5+salt),salty=rng(vec2(floor(pos.y/ry),floor(pos.z/rz)));pos.y=repeat(pos.y,ry);pos.z=repeat(pos.z,rz);float scene=sdBox(pos,vec3(.1+.8*salt+salty,.1+.2*salt,.1+.2*salty));scene=max(scene,sdBox(p,vec3(.8)));return scene;}float map(vec3 pos){vec3 camOffset=vec3(-4,0,0.);float scene=1000.;vec3 p=pos+camOffset;float segments=47.1239,indexX,indexY,salt;vec2 seed;vec3 pDonut=p;pDonut.x+=30.;pDonut.y+=15.;pDonut.xz=displaceLoop(pDonut.xz,30.);pDonut.z*=30.;pDonut.xzy=pDonut.xyz;p=pDonut;scene=min(scene,sdCylinder(p.xz,13.));p=pDonut;float py=p.y+iGlobalTime;indexY=floor(py/4.04);p.y=repeat(py,4.04);scene=min(scene,max(abs(p.y)-.04,sdCylinder(p.xz,15.)));amod(p.xz,segments);p.x-=15.;scene=min(scene,max(abs(p.z)-.04,p.x));p=pDonut;p.xz*=rot(3.14159/segments);py=p.y+iGlobalTime;indexY=floor(py/4.04);p.y=repeat(py,4.04);indexX=amodIndex(p.xz,segments);amod(p.xz,segments);seed=vec2(indexX,indexY);salt=rng(seed);p.x-=15.;vec2 dimension=vec2(.75,.5);p.x+=dimension.x*1.5;scene=max(scene,-sdBox(p,vec3(dimension.x,.1,dimension.y)));scene=min(scene,window(p.xzy,dimension,salt));p=pDonut;py=p.y+2.+iGlobalTime;indexY=floor(py/4.04);p.y=repeat(py,4.04);indexX=amodIndex(p.xz,segments);amod(p.xz,segments);seed=vec2(indexX,indexY);salt=rng(seed);p.x-=15.;dimension.y=1.5;p.x+=dimension.x*1.25;scene=max(scene,-sdBox(p,vec3(dimension,.1)));scene=min(scene,window(p,dimension,salt));p=pDonut;p.xz*=rot(3.14159/segments);py=p.y+2.+iGlobalTime;indexY=floor(py/4.04);p.y=repeat(py,4.04);indexX=amodIndex(p.xz,segments);amod(p.xz,segments);seed=vec2(indexX,indexY);salt=rng(seed);p.x-=13.;scene=min(scene,box(p,salt));p=pos;float px=p.x,rx=3.,sx=floor(px/rx),nx=rng(vec2(sx,sx)*100.);p.x=repeat(px,rx);return scene;}float getShadow(vec3 pos,vec3 at,float k){vec3 dir=normalize(at-pos);float maxt=length(at-pos),fi=1.,t=.05;for(float i=0.;i<=1.;i+=1./15.){float dist=map(pos+dir*t);if(dist<.001)return 0.;fi=min(fi,k*dist/t);t+=dist;if(t>=maxt)break;}return fi;}vec3 getNormal(vec3 p){vec2 e=vec2(.01,0);return normalize(vec3(map(p+e.xyy)-map(p-e.xyy),map(p+e.yxy)-map(p-e.yxy),map(p+e.yyx)-map(p-e.yyx)));}void main(){vec2 uv=(gl_FragCoord.xy-.5*iResolution.xy)/iResolution.y;vec3 eye=vec3(0,0,-20),ray=normalize(vec3(uv,1.3));camera(eye);camera(ray);float dither=rng(uv+fract(iGlobalTime));vec3 pos=eye;float shade=0.;for(float i=0.;i<=1.;i+=.01){float dist=map(pos);if(dist<.001){shade=1.-i;break;}dist*=.5+.1*dither;pos+=ray*dist;}vec3 color=vec3(1),light=vec3(40.,100.,0.);color*=shade;color*=getShadow(pos,light,4.);color=smoothstep(0.,.5,color);color=sqrt(color);gl_FragColor=vec4(color,1);}
